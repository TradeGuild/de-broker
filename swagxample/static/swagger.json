{
    "info": {
        "termsOfService": "http://deginner.com/terms/", 
        "description": "A port of the coinowner example app from flask-mrest using bitjws and swagger", 
        "license": {
            "url": "http://creativecommons.org/licenses/by/4.0/", 
            "name": "Creative Commons 4.0 International"
        }, 
        "title": "Coin Owner bitjws example", 
        "contact": {
            "url": "http://deginner.com", 
            "name": "Deginner"
        }, 
        "version": "0.0.0"
    }, 
    "paths": {
        "/coin": {
            "post": {
                "description": "", 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/Coin"
                        }, 
                        "required": true, 
                        "description": "A communal property coin", 
                        "name": "coin", 
                        "in": "body"
                    }
                ], 
                "produces": [
                    "application/jose"
                ], 
                "summary": "Create a coin. The request sender will be installed as the coin's user.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "addCoin", 
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "coin response", 
                        "schema": {
                            "$ref": "#/definitions/Coin"
                        }
                    }
                }
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "coin response", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Coin"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "description": "Currently no search parameters are supported.", 
                "produces": [
                    "application/jose"
                ], 
                "summary": "Get a list of all coins.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "findCoin"
            }
        }, 
        "/user": {
            "post": {
                "description": "Create a User and a UserKey based on the JWS header and payload.", 
                "parameters": [
                    {
                        "required": true, 
                        "in": "body", 
                        "description": "A new User to add", 
                        "name": "user", 
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ], 
                "produces": [
                    "application/jose"
                ], 
                "summary": "Register a new User.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "addUser", 
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "user's new key", 
                        "schema": {
                            "$ref": "#/definitions/UserKey"
                        }
                    }
                }
            }, 
            "get": {
                "responses": {
                    "default": {
                        "description": "unexpected error", 
                        "schema": {
                            "$ref": "#/definitions/errorModel"
                        }
                    }, 
                    "200": {
                        "description": "user response", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/User"
                            }, 
                            "type": "array"
                        }
                    }
                }, 
                "description": "<br/>Users may only get their own info, not others'.", 
                "produces": [
                    "application/jose"
                ], 
                "summary": "Get your user object.", 
                "security": [
                    {
                        "kid": []
                    }, 
                    {
                        "typ": []
                    }, 
                    {
                        "alg": []
                    }
                ], 
                "operationId": "getUserList"
            }
        }
    }, 
    "schemes": [
        "http", 
        "https"
    ], 
    "produces": [
        "application/jose"
    ], 
    "basePath": "/", 
    "securityDefinitions": {
        "alg": {
            "in": "query", 
            "type": "apiKey", 
            "description": "The signing algorithm to use i.e. \"CUSTOM-BITCOIN-SIGN\"", 
            "name": "alg"
        }, 
        "typ": {
            "in": "query", 
            "type": "apiKey", 
            "description": "The message type", 
            "name": "typ"
        }, 
        "kid": {
            "in": "query", 
            "type": "apiKey", 
            "description": "The JWS key", 
            "name": "kid"
        }
    }, 
    "host": "0.0.0.0:8002", 
    "definitions": {
        "IntUserSetting": {
            "properties": {
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "value": {
                    "type": "integer"
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }, 
            "required": [
                "value"
            ], 
            "type": "object", 
            "description": "An Int Setting applied to a User", 
            "title": "IntUserSetting"
        }, 
        "Coin": {
            "required": [
                "metal", 
                "mint"
            ], 
            "type": "object", 
            "properties": {
                "metal": {
                    "type": "string"
                }, 
                "mint": {
                    "type": "string"
                }, 
                "id": {
                    "type": "integer", 
                    "format": "int64"
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }
            }
        }, 
        "StrUserSetting": {
            "properties": {
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "value": {
                    "type": "string", 
                    "maxLength": 320
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }, 
            "required": [
                "value"
            ], 
            "type": "object", 
            "description": "A Setting applied to a User", 
            "title": "StrUserSetting"
        }, 
        "DateTimeUserSetting": {
            "properties": {
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "value": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }, 
            "required": [
                "value"
            ], 
            "type": "object", 
            "description": "A Setting applied to a User", 
            "title": "DateTimeUserSetting"
        }, 
        "KeyPermission": {
            "properties": {
                "permission": {
                    "type": "string"
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 320
                }, 
                "name": {
                    "type": "string", 
                    "maxLength": 80
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }
            }, 
            "required": [
                "permission", 
                "name"
            ], 
            "type": "object", 
            "description": "A Key Permission", 
            "title": "KeyPermission"
        }, 
        "Setting": {
            "properties": {
                "value_type": {
                    "enum": [
                        "str", 
                        "int", 
                        "date-time"
                    ], 
                    "type": "string", 
                    "maxLength": 9
                }, 
                "name": {
                    "type": "string", 
                    "maxLength": 80
                }, 
                "description": {
                    "type": "string", 
                    "maxLength": 320
                }
            }, 
            "required": [
                "name"
            ], 
            "type": "object", 
            "description": "A Setting", 
            "title": "Setting"
        }, 
        "User": {
            "properties": {
                "username": {
                    "type": "string", 
                    "maxLength": 37
                }, 
                "salt": {
                    "type": "string", 
                    "maxLength": 12
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }
            }, 
            "required": [
                "username"
            ], 
            "type": "object", 
            "description": "A User", 
            "title": "User"
        }, 
        "UserKey": {
            "title": "UserKey", 
            "required": [
                "key", 
                "keytype"
            ], 
            "type": "object", 
            "properties": {
                "deactivated_at": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "keytype": {
                    "enum": [
                        "public", 
                        "tfa"
                    ], 
                    "type": "string", 
                    "maxLength": 6
                }, 
                "permissionbits": {
                    "type": "string"
                }, 
                "user": {
                    "$ref": "#/definitions/User"
                }, 
                "key": {
                    "type": "string", 
                    "maxLength": 36
                }, 
                "id": {
                    "type": "integer", 
                    "description": "primary key"
                }, 
                "last_nonce": {
                    "type": "integer"
                }, 
                "createtime": {
                    "type": "string", 
                    "format": "date-time"
                }
            }, 
            "description": "A User's API key"
        }, 
        "errorModel": {
            "required": [
                "code", 
                "message"
            ], 
            "type": "object", 
            "properties": {
                "message": {
                    "type": "string"
                }, 
                "code": {
                    "type": "integer", 
                    "format": "int32"
                }
            }
        }
    }, 
    "security": [
        {
            "kid": []
        }, 
        {
            "typ": []
        }, 
        {
            "alg": []
        }
    ], 
    "swagger": "2.0", 
    "consumes": [
        "application/jose"
    ]
}